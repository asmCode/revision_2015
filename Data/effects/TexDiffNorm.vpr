#version 400

layout (location = 0) in vec3 a_position;
layout (location = 1) in vec2 a_coordsDiff;
layout (location = 3) in vec3 a_normal;
layout (location = 4) in vec3 a_tangent;

uniform mat4 u_builtin_world;
uniform mat4 u_builtin_viewProj;
uniform vec3 u_builtin_pointLightPosition;
uniform vec3 u_builtin_eyePosition;

out vec2 o_coordsDiff;
out vec3 o_normal;
out vec3 o_lightDirection;
out vec3 o_eyeDirection;

void main()
{
	o_coordsDiff = a_coordsDiff;
	
	vec4 worldPosition = u_builtin_world * vec4(a_position, 1.0);
	vec3 worldNormal = normalize(mat3(u_builtin_world) * a_normal);
	vec3 worldTangent = normalize(mat3(u_builtin_world) * a_tangent);

	vec3 bitangent = cross(worldNormal, worldTangent);
	mat3 worldToTex = inverse(mat3(worldTangent, bitangent, worldNormal));

	o_normal = mat3(u_builtin_world) * a_normal;

	o_lightDirection = worldToTex * (u_builtin_pointLightPosition - worldPosition.xyz);
	o_eyeDirection = worldToTex * (u_builtin_eyePosition - worldPosition.xyz);
	
	gl_Position = u_builtin_viewProj * worldPosition;
}
