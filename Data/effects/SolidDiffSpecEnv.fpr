#version 400

layout( location = 0 ) out vec4 FragColor;
layout( location = 1 ) out vec4 FragColorGlow;

uniform sampler2D u_envTex;
uniform vec3 u_color;
uniform float u_specularLevel;
uniform float u_glossiness;

varying vec3 o_normal;
varying vec3 o_lightDirection;
varying vec3 o_eyeDirection;

void main()
{
	vec3 normal = normalize(o_normal);
	vec3 lightDirection = normalize(o_lightDirection);
	vec3 eyeDirection = normalize(o_eyeDirection);

	vec3 _half = normalize(lightDirection + eyeDirection);
		
	float diffValue = smoothstep(0.6, 1.0, abs(dot(lightDirection, normal))) * 0.2 + 0.05;
	float specValue = pow(abs(dot(_half, normal)), u_glossiness) * u_specularLevel;
	
	vec2 envUV = eyeDirection.xy + 1.0 * 0.5; 

	//FragColor = vec4(u_color * diffValue + specValue, 1.0);
	FragColor = texture(u_envTex, sin(envUV) * 8.0f) * diffValue + specValue;
	FragColor.w = 1.0;
	FragColorGlow = FragColor * 0.4;
	FragColorGlow.w = 1.0;
}
